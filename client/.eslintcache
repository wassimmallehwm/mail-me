[{"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\index.js":"1","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\App.js":"2","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Home.js":"3","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Navbar.js":"4","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Register.js":"5","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Login.js":"6","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\context\\auth.js":"7","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\GuestRoute.js":"8","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\hooks.js":"9","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\api.js":"10","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Layout.js":"11","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Sidebar.js":"12","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\SideBar.js":"13","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Mails.js":"14","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\MailContent.js":"15","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Loading.js":"16","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\toast.js":"17","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\ProtectedRoute.js":"18","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\serviceWorker.js":"19","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Accounts.js":"20","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Profile.js":"21","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\UserDetails.js":"22","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\ChangePassword.js":"23","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\ImageEditor.js":"24","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\menu.service.js":"25","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Menus.js":"26","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\roles.service.js":"27","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\FormCreator.js":"28","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\FormRender.js":"29","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Error.js":"30","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\config.js":"31","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\GuestHome.js":"32","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\NotFound.js":"33","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\NoData.js":"34","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Users.js":"35","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\users.service.js":"36","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\RegisterRequests.js":"37","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\register-request.service.js":"38","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\events.js":"39","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\EventsTypes.js":"40","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\DeleteAccount.js":"41","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\i18n.js":"42","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\translate.js":"43","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\Messenger.js":"44","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\conversations\\Conversation.js":"45","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\message\\Message.js":"46","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\chatOnline\\ChatOnline.js":"47","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\conversation.service.js":"48","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\displayName.js":"49","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\message.service.js":"50","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Tooltip.js":"51","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\socketEvents.js":"52"},{"size":312,"mtime":1615156083968,"results":"53","hashOfConfig":"54"},{"size":3682,"mtime":1619920065191,"results":"55","hashOfConfig":"54"},{"size":4056,"mtime":1614376485673,"results":"56","hashOfConfig":"54"},{"size":3191,"mtime":1615156705134,"results":"57","hashOfConfig":"54"},{"size":4304,"mtime":1614123010279,"results":"58","hashOfConfig":"54"},{"size":3602,"mtime":1614378145022,"results":"59","hashOfConfig":"54"},{"size":1315,"mtime":1613602799400,"results":"60","hashOfConfig":"54"},{"size":460,"mtime":1608763170225,"results":"61","hashOfConfig":"54"},{"size":419,"mtime":1608763170228,"results":"62","hashOfConfig":"54"},{"size":1322,"mtime":1613941659587,"results":"63","hashOfConfig":"54"},{"size":759,"mtime":1613505872424,"results":"64","hashOfConfig":"54"},{"size":1356,"mtime":1608247566656,"results":"65","hashOfConfig":"54"},{"size":2566,"mtime":1619842484883,"results":"66","hashOfConfig":"54"},{"size":2803,"mtime":1614290924376,"results":"67","hashOfConfig":"54"},{"size":755,"mtime":1609978516557,"results":"68","hashOfConfig":"54"},{"size":412,"mtime":1610023989719,"results":"69","hashOfConfig":"54"},{"size":663,"mtime":1614123010220,"results":"70","hashOfConfig":"54"},{"size":464,"mtime":1608763170226,"results":"71","hashOfConfig":"54"},{"size":254,"mtime":1612911288077,"results":"72","hashOfConfig":"54"},{"size":7367,"mtime":1613085582212,"results":"73","hashOfConfig":"54"},{"size":10155,"mtime":1615588285253,"results":"74","hashOfConfig":"54"},{"size":2097,"mtime":1613082622175,"results":"75","hashOfConfig":"54"},{"size":2514,"mtime":1613941693480,"results":"76","hashOfConfig":"54"},{"size":2206,"mtime":1612913042440,"results":"77","hashOfConfig":"54"},{"size":1965,"mtime":1619995124517,"results":"78","hashOfConfig":"54"},{"size":15939,"mtime":1619997227261,"results":"79","hashOfConfig":"54"},{"size":257,"mtime":1612306279887,"results":"80","hashOfConfig":"54"},{"size":3884,"mtime":1613087272127,"results":"81","hashOfConfig":"54"},{"size":2820,"mtime":1613082737778,"results":"82","hashOfConfig":"54"},{"size":561,"mtime":1613084848149,"results":"83","hashOfConfig":"54"},{"size":366,"mtime":1619906141127,"results":"84","hashOfConfig":"54"},{"size":854,"mtime":1613602768342,"results":"85","hashOfConfig":"54"},{"size":338,"mtime":1613085140953,"results":"86","hashOfConfig":"54"},{"size":379,"mtime":1613087081366,"results":"87","hashOfConfig":"54"},{"size":11205,"mtime":1614538791484,"results":"88","hashOfConfig":"54"},{"size":3399,"mtime":1614527926043,"results":"89","hashOfConfig":"54"},{"size":4053,"mtime":1614378144960,"results":"90","hashOfConfig":"54"},{"size":789,"mtime":1614376296840,"results":"91","hashOfConfig":"54"},{"size":382,"mtime":1614376296283,"results":"92","hashOfConfig":"54"},{"size":95,"mtime":1614378144922,"results":"93","hashOfConfig":"54"},{"size":1789,"mtime":1614416490740,"results":"94","hashOfConfig":"54"},{"size":758,"mtime":1615411102617,"results":"95","hashOfConfig":"54"},{"size":142,"mtime":1615244163516,"results":"96","hashOfConfig":"54"},{"size":10210,"mtime":1619996964738,"results":"97","hashOfConfig":"54"},{"size":1283,"mtime":1619924679528,"results":"98","hashOfConfig":"54"},{"size":1469,"mtime":1619895369713,"results":"99","hashOfConfig":"54"},{"size":839,"mtime":1619882411355,"results":"100","hashOfConfig":"54"},{"size":465,"mtime":1619841323366,"results":"101","hashOfConfig":"54"},{"size":244,"mtime":1619842528527,"results":"102","hashOfConfig":"54"},{"size":490,"mtime":1619922221263,"results":"103","hashOfConfig":"54"},{"size":283,"mtime":1618937056088,"results":"104","hashOfConfig":"54"},{"size":331,"mtime":1619908547483,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"cia59w",{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\index.js",[],["230","231"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\App.js",["232","233"],"import React, { useState, lazy, Suspense } from 'react'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { AuthProvider } from './context/auth'\r\nimport GuestRoute from './utils/GuestRoute';\r\nimport ProtectedRoute from './utils/ProtectedRoute';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'semantic-ui-react-icon-picker/dist/index.css';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport i18n from './utils/i18n';\r\n\r\nimport Loading from './components/Loading';\r\nconst Messenger = lazy(() => import('./components/pages/chat/Messenger'));\r\nconst Navbar = lazy(() => import('./components/Navbar'));\r\nconst NotFound = lazy(() => import('./components/pages/NotFound'));\r\nconst Accounts = lazy(() => import('./components/pages/Accounts'));\r\nconst Home = lazy(() => import('./components/pages/Home'));\r\nconst Login = lazy(() => import('./components/pages/Login'));\r\nconst Register = lazy(() => import('./components/pages/Register'));\r\nconst Layout = lazy(() => import('./components/Layout'));\r\nconst Mails = lazy(() => import('./components/pages/Mails'));\r\nconst MailContent = lazy(() => import('./components/pages/MailContent'));\r\nconst Profile = lazy(() => import('./components/pages/Profile'));\r\nconst Menus = lazy(() => import('./components/pages/Menus'));\r\nconst Users = lazy(() => import('./components/pages/Users'));\r\nconst RegisterRequests = lazy(() => import('./components/pages/RegisterRequests'));\r\nconst FormCreator = lazy(() => import('./components/pages/FormCreator'));\r\nconst FormRender = lazy(() => import('./components/pages/FormRender'));\r\n\r\n\r\ntoast.configure()\r\nconst App = () => {\r\n  const [sidebarVisible, setSidebarVisible] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarVisible(!sidebarVisible);\r\n  }\r\n\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  }\r\n\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n\r\n  const closeSidebar = () => {\r\n    setSidebarVisible(false);\r\n  }\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <AuthProvider>\r\n      <Router >\r\n        <Suspense fallback={(<Loading/>)}>\r\n          <Navbar history={history} toggleSidebar={toggleSidebar} changeLanguage={changeLanguage} />\r\n          <ToastContainer />\r\n          <Layout sidebarVisible={sidebarVisible} closeSidebar={closeSidebar}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <ProtectedRoute exact path=\"/messenger\" component={Messenger}/>\r\n              <ProtectedRoute exact path=\"/mails\" component={Mails} />\r\n              <ProtectedRoute exact path=\"/accounts\" component={Accounts} />\r\n              <ProtectedRoute exact path=\"/menus\" component={Menus} />\r\n              <ProtectedRoute exact path=\"/users\" component={Users} />\r\n              <ProtectedRoute exact path=\"/requests\" component={RegisterRequests} />\r\n              <ProtectedRoute exact path=\"/mails/content\" component={MailContent} />\r\n              <ProtectedRoute exact path=\"/profile\" component={Profile} />\r\n              <ProtectedRoute exact path=\"/form-builder\" component={FormCreator} />\r\n              <ProtectedRoute exact path=\"/form/:menuId\" component={FormRender} />\r\n              <GuestRoute exact path=\"/register\" component={Register} />\r\n              <GuestRoute exact path=\"/login\" component={Login} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Layout>\r\n        </Suspense>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default withNamespaces()(App)","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Home.js",["234","235"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Grid, Header, Form, Select } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { accountsList, sendMail } from '../../services/api';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { Toast } from '../../utils/toast';\r\nimport Loading from '../Loading';\r\nimport GuestHome from '../GuestHome';\r\n\r\n\r\nconst Home = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [state, setState] = useState({\r\n    mailBody: EditorState.createEmpty(),\r\n    sender: '',\r\n    receiver: '',\r\n    subject: '',\r\n    accounts: null,\r\n    loading: false\r\n  })\r\n\r\n  const { receiver, sender, subject, accounts, mailBody } = state;\r\n  \r\n  const getUserAccounts = () => {\r\n    user && accountsList(user.token).then(\r\n      (res) => {\r\n        let values = [];\r\n        res.data.forEach(acc => {\r\n          values.push({key: acc._id, value: acc.email, text: acc.label});\r\n        })\r\n        setState({ ...state, accounts: values })\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        Toast(\"ERROR\", \"Error loading accounts\");\r\n      }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserAccounts();\r\n  }, []);\r\n\r\n\r\n  const onEditorStateChange = (mailBody) => {\r\n    setState({\r\n      ...state,\r\n      mailBody,\r\n    });\r\n  };\r\n\r\n  const handleAccountChange = (event, data) => {\r\n    setState({ ...state, sender: data.value })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.value })\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setState({ ...state, loading: true })\r\n    const data = {\r\n      mailBody: draftToHtml(convertToRaw(mailBody.getCurrentContent())),\r\n      receiver,\r\n      sender,\r\n      subject,\r\n      senderId: user.username\r\n    }\r\n    sendMail(data).then(\r\n      () => {\r\n        setState({ ...state, loading: false , sender: '', receiver: '', mailBody: ''})\r\n        Toast(\"SUCCESS\", \"Email sent successfully\");\r\n      },\r\n      error => {\r\n        console.log(error)\r\n        setState({ ...state, loading: false })\r\n        Toast(\"ERROR\", \"Error sending the email\");\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  const mailForm = () => (\r\n    <>\r\n      <Header as='h3'>Home Page</Header>\r\n      <Form\r\n        className={state.loading ? 'loading ui form ' : 'ui form main-form'}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <Form.Field className=\"ui left icon input fluid\"\r\n          control={Select}\r\n          options={accounts}\r\n          closeOnChange\r\n          placeholder='Account'\r\n          search\r\n          searchInput={{ id: 'form-select-account' }}\r\n          defaultValue={sender}\r\n          onChange={handleAccountChange}\r\n        />\r\n        <div className=\"ui left icon input fluid\">\r\n          <i aria-hidden=\"true\" className=\"at icon\"></i>\r\n          <input type=\"email\" placeholder=\"To\"\r\n            name=\"receiver\"\r\n            value={receiver}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"ui left icon input fluid\">\r\n          <i aria-hidden=\"true\" className=\"envelope open icon\"></i>\r\n          <input type=\"text\" placeholder=\"Subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <Editor\r\n          editorState={state.mailBody}\r\n          toolbarClassName=\"toolbarClassName\"\r\n          wrapperClassName=\"wrapperClassName\"\r\n          editorClassName=\"editorClassName\"\r\n          onEditorStateChange={onEditorStateChange}\r\n        />\r\n        <button type=\"submit\" className=\"ui primary right floated button\">Send</button>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    user ?\r\n      accounts && accounts.length > 0 ?\r\n        mailForm()\r\n        : (<Loading />)\r\n      : (\r\n        <GuestHome/>\r\n        \r\n      )\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Navbar.js",["236"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Button, Icon, Label, Menu } from 'semantic-ui-react'\r\nimport { AuthContext } from '../context/auth'\r\nimport Emitter from '../services/events'\r\nimport { interceptToken } from '../services/users.service'\r\nimport EventsTypes from '../utils/EventsTypes'\r\n\r\nconst Navbar = ({ history, toggleSidebar, changeLanguage }) => {\r\n  const handleItemClick = (e, { name }) => setaAtiveItem(name)\r\n\r\n  const { user, logout, login } = useContext(AuthContext);\r\n  const [requestsCount, setRequestsCount] = useState(null)\r\n\r\n  const refreshTokenCallback = (data) => {\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    userData.token = data.token;\r\n    localStorage.setItem('userData', JSON.stringify(userData))\r\n    login(userData)\r\n    return data.token;\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    history.push('/')\r\n    handleItemClick(null, { name: 'home' });\r\n    logout();\r\n  }\r\n\r\n  useEffect(() => {\r\n    interceptToken(refreshTokenCallback, logout);\r\n    Emitter.on(EventsTypes.REQUESTS_NUMBER, (requestsValue) => setRequestsCount(requestsValue));\r\n  }, [])\r\n\r\n  const pathname = window.location.pathname\r\n  const path = pathname === '/' ? 'home' : pathname.substring(1)\r\n  const [activeItem, setaAtiveItem] = useState(path)\r\n\r\n  const langButton = (\r\n    <>\r\n    <Menu.Item\r\n      name='FR'\r\n      onClick={() => { changeLanguage('fr') }}\r\n      as={Button}\r\n    />\r\n    <Menu.Item\r\n      name='EN'\r\n      onClick={() => { changeLanguage('en') }}\r\n      as={Button}\r\n    />\r\n    </>\r\n  )\r\n\r\n  const navbar = user ? (\r\n    <Menu pointing secondary size=\"massive\" color=\"teal\">\r\n      <Menu.Item onClick={toggleSidebar}>\r\n        <Icon name=\"sidebar\" size='large' />\r\n      </Menu.Item>\r\n      <Menu.Menu position='right'>\r\n        {\r\n          user.isAdmin && (\r\n            <Menu.Item as={Link} to=\"/requests\">\r\n              <Icon name='user plus' />\r\n              {\r\n                requestsCount && requestsCount > 0 ? (\r\n                  <Label color='teal' attached=\"bottom right\" circular>\r\n                    {requestsCount}\r\n                  </Label>\r\n                ) : null\r\n              }\r\n            </Menu.Item>\r\n          )\r\n        }\r\n        {langButton}\r\n        <Menu.Item\r\n          name='logout'\r\n          onClick={logoutUser}\r\n        />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  ) : (\r\n    <Menu className=\"no-marg-menu\" pointing secondary size=\"massive\" color=\"teal\">\r\n      <Menu.Item\r\n        name='home'\r\n        active={activeItem === 'home'}\r\n        onClick={handleItemClick}\r\n        as={Link}\r\n        to=\"/\"\r\n      />\r\n      <Menu.Menu position='right'>\r\n        <Menu.Item\r\n          name='login'\r\n          active={activeItem === 'login'}\r\n          onClick={handleItemClick}\r\n          as={Link}\r\n          to=\"/login\"\r\n        />\r\n        <Menu.Item\r\n          name='register'\r\n          active={activeItem === 'register'}\r\n          onClick={handleItemClick}\r\n          as={Link}\r\n          to=\"/register\"\r\n        />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  )\r\n  return navbar\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Register.js",["237","238"],"import React, { useContext, useState } from 'react'\r\nimport { Button, Form, Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { useForm } from '../../utils/hooks';\r\nimport { register } from '../../services/users.service';\r\nimport { Toast } from '../../utils/toast';\r\n\r\nconst Register = ({ history }) => {\r\n    const context = useContext(AuthContext)\r\n    const initState = {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        loading: false,\r\n        passwordCheck: ''\r\n    }\r\n    const { onChange, onSubmit, values } = useForm(registerUser, initState)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const regUser = () => {\r\n        const { username, email, password, passwordCheck } = values;\r\n        const data = { username, email, password, passwordCheck };\r\n        register(data).then(\r\n            (res) => {\r\n                if(res.data){\r\n                    Toast(\"SUCCESS\", \"Registered successfully\");\r\n                    Toast(\"INFO\", \"You will get notified by mail when the account is activated\");\r\n                    history.push('/')\r\n                }\r\n            },\r\n            error => {\r\n                console.log(error)\r\n                Toast(\"ERROR\", \"Error while registring\");\r\n            }\r\n        )\r\n    }\r\n\r\n    function registerUser() {\r\n        regUser()\r\n    }\r\n    return (\r\n        <Grid style={{height: '80vh'}} verticalAlign='middle' columns={1} centered>\r\n            <Grid.Row>\r\n                <Grid.Column mobile={16} tablet={12} computer={6}>\r\n                    <Form onSubmit={onSubmit} className={values.loading ? \"loading\" : ''} noValidate>\r\n                        <h1>Register</h1>\r\n\r\n                        <Form.Input\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            value={values.username}\r\n                            error={errors.username ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            label=\"Email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            error={errors.email ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={values.password}\r\n                            error={errors.password ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            label=\"Confirm Password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"passwordCheck\"\r\n                            type=\"password\"\r\n                            value={values.passwordCheck}\r\n                            error={errors.passwordCheck ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Button type=\"submit\" primary>\r\n                            Register\r\n                </Button>\r\n                    </Form>\r\n                    {\r\n                        Object.keys(errors).length > 0 &&\r\n                        (\r\n                            <div className=\"ui error message\">\r\n                                <ul className=\"list\">\r\n                                    {\r\n                                        Object.values(errors).map(value => (\r\n                                            <li key={value}>{value}</li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Login.js",["239"],"import React, { useState, useContext } from 'react'\r\nimport { Button, Form, Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { useForm } from '../../utils/hooks';\r\nimport { login } from '../../services/users.service';\r\nimport { Toast } from '../../utils/toast';\r\nimport { count } from '../../services/register-request.service';\r\nimport Emitter from '../../services/events';\r\nimport EventsTypes from '../../utils/EventsTypes';\r\n\r\nconst Login = ({ history }) => {\r\n    const context = useContext(AuthContext)\r\n    const initState = {\r\n        loading: false,\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const { onChange, onSubmit, values } = useForm(loginUser, initState)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const getUserRequestsCount = (user) => {\r\n        user.isAdmin && count(user.token).then(\r\n            (res) => {\r\n                Emitter.emit(EventsTypes.REQUESTS_NUMBER, res.data);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    const logUser = () => {\r\n        const { email, password } = values;\r\n        const data = { email, password };\r\n        login(data).then(\r\n            (res) => {\r\n                context.login(res.data)\r\n                getUserRequestsCount(res.data)\r\n                history.push('/')\r\n            },\r\n            error => {\r\n                Toast(\"ERROR\", error.response.data.msg);\r\n            }\r\n        )\r\n    }\r\n\r\n    function loginUser() {\r\n        logUser()\r\n    }\r\n    return (\r\n        <Grid style={{ height: '80vh' }} verticalAlign='middle' columns={1} centered>\r\n            <Grid.Row>\r\n                <Grid.Column mobile={16} tablet={12} computer={6}>\r\n                    <Form onSubmit={onSubmit} className={values.loading ? \"loading\" : ''} noValidate>\r\n                        <h1>Login</h1>\r\n\r\n                        <Form.Input\r\n                            label=\"Email\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            error={errors.email ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={values.password}\r\n                            error={errors.password ? true : false}\r\n                            onChange={onChange}\r\n                        />\r\n                        <Button type=\"submit\" primary>\r\n                            Login\r\n                </Button>\r\n                    </Form>\r\n                    {\r\n                        Object.keys(errors).length > 0 &&\r\n                        (\r\n                            <div className=\"ui error message\">\r\n                                <ul className=\"list\">\r\n                                    {\r\n                                        Object.values(errors).map(value => (\r\n                                            <li key={value}>{value}</li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\context\\auth.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\GuestRoute.js",["240"],"import React, {Component, useContext} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport { AuthContext } from '../context/auth'\r\n\r\nconst GuestRoute = ({component: Component, ...rest}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render= {\r\n            props => user ? <Redirect to=\"/\"/> : <Component {...props}/>\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nexport default GuestRoute;","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\hooks.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\api.js",["241"],"import Axios from 'axios';\r\nimport config from '../config';\r\n\r\nconst API_URL = config.apiUrl; \r\n\r\n\r\nexport const createOrUpdateAccount = (token, mode, data) => {\r\n  const URL = mode == \"add\" ? API_URL + \"accounts/create\" : API_URL + \"accounts/update\";\r\n  return Axios.post(URL, data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const accountsList = (token) => {\r\n  return Axios.post(API_URL + \"accounts/\", null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const deleteUserAccount = (token, data) => {\r\n  return Axios.post(API_URL + \"accounts/remove\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const sendMail = (data) => {\r\n  return Axios.post(API_URL + \"mails/send\", data);\r\n}\r\n\r\nexport const mailsList = (token) => {\r\n  return Axios.post(API_URL + \"mails/\", null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const mailById = (mailId, token) => {\r\n  return Axios.post(API_URL + \"mails/\" + mailId, null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport const formSubmit = (token, {submitConfigMethod, submitConfigUrl}, data) => {\r\n  return Axios({\r\n    method: submitConfigMethod,\r\n    url: submitConfigUrl,\r\n    data,\r\n    headers: {'x-auth-token': token}\r\n  });\r\n}","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Layout.js",["242"],"import React, {lazy, Suspense, useContext} from 'react'\r\nimport { Container } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/auth';\r\nimport Loading from './Loading';\r\nconst SideBar = lazy(() => import('./SideBar'));\r\n\r\nconst Layout = ({sidebarVisible, closeSidebar, children}) => {\r\n    const {user} = useContext(AuthContext);\r\n\r\n    return (\r\n        <>\r\n        {user ? (\r\n            <Suspense fallback={<Loading/>}>\r\n                <SideBar closeSidebar={closeSidebar} visible={sidebarVisible}>\r\n                <div className=\"main-content\">\r\n                    {children}\r\n                </div>\r\n                </SideBar>\r\n            </Suspense>\r\n        ) : children\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Sidebar.js",["243"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\SideBar.js",["244","245","246","247"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Grid, Icon, Menu, Segment, Sidebar, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/auth';\r\nimport { findAllByRole } from '../services/menu.service';\r\nimport config from '../config';\r\n\r\nconst SideBar = ({ history, visible, closeSidebar, children }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [state, setState] = useState({\r\n    menuList: null\r\n  })\r\n\r\n  const { menuList } = state;\r\n\r\n  const displayName = () => {\r\n    if (user.firstname && user.firstname != '' && user.lastname && user.lastname != '') {\r\n      return user.firstname + ' ' + user.lastname;\r\n    }\r\n    return user.username;\r\n  }\r\n\r\n  useEffect(() => {\r\n    user && findAllByRole(user.token, { role: user.role }).then(\r\n      res => {\r\n        setState({ ...state, menuList: res.data })\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  const imgUrl = config.publicUrl + \"images/users/\";\r\n  return (\r\n    <Grid>\r\n      <Grid.Row style={{ padding: 0, margin: 0 }} stretched>\r\n        <Grid.Column style={{ padding: 0, margin: 0 }}>\r\n          <Sidebar.Pushable as={Segment}>\r\n            <Sidebar\r\n              as={Menu}\r\n              animation=\"overlay\"\r\n              icon='labeled'\r\n              vertical\r\n              visible={visible}\r\n              width='wide'\r\n            >\r\n\r\n              <Menu.Item as={Link} to=\"/profile\">\r\n                <Item.Image centered circular size='tiny' src={imgUrl + user.imagePath} />\r\n                <Item.Content verticalAlign='middle'>\r\n                  <Item.Header><strong>{displayName()}</strong></Item.Header>\r\n                </Item.Content>\r\n              </Menu.Item>\r\n              {\r\n                menuList &&\r\n                menuList.map(menu => (\r\n                  <Menu.Item key={menu._id} as={Link} to={menu.isArtificial ? `/form/${menu._id}` : menu.url}>\r\n                    {\r\n                    menu.symboleType == 'ICON' \r\n                    ? (<Icon style={{position: 'absolut', left: '1em'}} size=\"mini\" name={menu.symbole} />)\r\n                    : (<Image size=\"mini\" avatar  src={imgUrl + menu.symbole} />)\r\n                  }\r\n                    <span>{menu.label}</span>\r\n                  </Menu.Item>\r\n                ))\r\n              }\r\n            </Sidebar>\r\n            <Sidebar.Pusher onClick={closeSidebar} dimmed={visible}>\r\n              <Segment basic>\r\n                {children}\r\n              </Segment>\r\n            </Sidebar.Pusher>\r\n          </Sidebar.Pushable>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Mails.js",["248"],"import React, { useEffect, useContext, useState } from 'react'\r\nimport { AuthContext } from '../../context/auth';\r\nimport { mailsList } from '../../services/api';\r\nimport { Table, Icon, Grid } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport Loading from '../Loading';\r\nimport { Toast } from '../../utils/toast';\r\nimport NoData from '../NoData';\r\n\r\nconst Mails = ({ history }) => {\r\n    const { user } = useContext(AuthContext);\r\n    const [state, setState] = useState({\r\n        mails: null\r\n    })\r\n\r\n    const { mails } = state;\r\n\r\n    const formatDate = date => {\r\n        return moment(date).format(\"DD/MM/YYYY HH:mm\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        user && mailsList(user.token).then(\r\n            (res) => {\r\n                setState({ mails: res.data })\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error loading mails\");\r\n            }\r\n        )\r\n    }, []);\r\n\r\n    const openMail = (data) => {\r\n        history.push('/mails/content', data);\r\n    }\r\n\r\n\r\n    const mailsTable = (\r\n        <Grid.Row>\r\n            {\r\n                mails && mails.length > 0 ? (\r\n                    <>\r\n                        <Table selectable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>E-mail</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Sent On</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Read</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {\r\n                                    mails.map((mail, i) => (\r\n                                        <Table.Row key={i} onClick={() => openMail(mail)}>\r\n                                            <Table.Cell>{mail.to}</Table.Cell>\r\n                                            <Table.Cell> {formatDate(mail.createdAt)} </Table.Cell>\r\n                                            <Table.Cell> {mail.read ? (<Icon className=\"checkmark-icon\" name='checkmark' />) : (<Icon style={{float: 'none'}} name='close' />)} </Table.Cell>\r\n                                        </Table.Row>\r\n                                    ))\r\n                                }\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </>\r\n                ) :\r\n                    (\r\n\r\n                        <NoData />\r\n                    )\r\n            }\r\n        </Grid.Row>\r\n    )\r\n\r\n    return (\r\n        <Grid columns={1} className=\"main-grid\">\r\n            {mails ? mailsTable : (<Loading />)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Mails\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\MailContent.js",["249","250","251"],"import React, {useContext, useState} from 'react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport Loading from '../Loading';\r\nimport { Toast } from '../../utils/toast';\r\n\r\nconst MailContent = (props) => {\r\n    const { user } = useContext(AuthContext);\r\n    const [state, setState] = useState({\r\n        mail : props.location.state\r\n    })\r\n\r\n    const createMarkup = (body) => {\r\n        return {__html: body};\r\n    }\r\n\r\n    const {mail} = state;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                mail ? (\r\n                    <div dangerouslySetInnerHTML={createMarkup(mail.body)}/>\r\n                ) : (\r\n                    <Loading/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MailContent\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Loading.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\toast.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\ProtectedRoute.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\serviceWorker.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Accounts.js",["252"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport { Button, Table, Grid, Modal, Form } from 'semantic-ui-react'\r\nimport { AuthContext } from '../../context/auth'\r\nimport { createOrUpdateAccount, accountsList, deleteUserAccount } from '../../services/api'\r\nimport { Toast } from '../../utils/toast';\r\nimport Loading from '../Loading';\r\n\r\nconst Accounts = () => {\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const [state, setState] = useState({\r\n        addEditModalOpen: false,\r\n        deleteModalOpen: false,\r\n        deleteAccount: null,\r\n        accounts: null,\r\n        Account: {\r\n            label: '',\r\n            email: ''\r\n        },\r\n        mode: \"add\",\r\n        modalTitle: \"Add Account\",\r\n        loading: false\r\n    })\r\n    const { addEditModalOpen, deleteModalOpen, deleteAccount, accounts, Account, mode, modalTitle, loading } = state\r\n\r\n    useEffect(() => {\r\n        user && accountsList(user.token).then(\r\n            (res) => {\r\n                setState({...state, accounts: res.data })\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error loading accounts\");\r\n            }\r\n        )\r\n    }, []);\r\n\r\n    const onChangeAccount = (e) => {\r\n        const acc = Account\r\n        acc[e.target.name] = e.target.value;\r\n        setState({...state, Account: acc})\r\n    }\r\n\r\n    const createOrUpdate = () => {\r\n        setState({...state, loading: true})\r\n        createOrUpdateAccount(user.token, mode, Account).then(\r\n            (res) => {\r\n                const acc = {label: '', email: ''}\r\n                setState({...state, loading: false, addEditModalOpen: false, accounts: res.data, Account: acc})\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                setState({...state, loading: false})\r\n                Toast(\"ERROR\", \"Error creating the account\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const openDeleteModal = (data) => {\r\n        setState({...state, deleteModalOpen: true, deleteAccount: data});\r\n    }\r\n\r\n    const closeDeleteModal = (data) => {\r\n        setState({...state, deleteModalOpen: false, deleteAccount: null});\r\n    }\r\n\r\n    const removeAccount = () => {\r\n        deleteUserAccount(user.token, {id: deleteAccount}).then(\r\n            (res) => {\r\n                setState({...state, deleteModalOpen: false, accounts: res.data, deleteAccount: null})\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                setState({...state, deleteModalOpen: false, deleteAccount: null})\r\n                Toast(\"ERROR\", \"Error deleting the account\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const deleteAccountModal = (\r\n        <Modal\r\n            closeOnEscape={true}\r\n            closeOnDimmerClick={true}\r\n            open={deleteModalOpen}\r\n            dimmer=\"blurring\"\r\n            size=\"tiny\"\r\n            onOpen={() => setState({ ...state, deleteModalOpen: true })}\r\n            onClose={closeDeleteModal}\r\n        >\r\n            <Modal.Header>Confirmation</Modal.Header>\r\n            <Modal.Content>\r\n                <h3>Are you sure you want to delete the account ?</h3>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={closeDeleteModal} basic>\r\n                    Cancel\r\n        </Button>\r\n                <Button onClick={removeAccount} negative>\r\n                    Delete\r\n        </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n\r\n\r\n    const openEditAccountModal = (data) => {\r\n        setState({...state, Account: data, mode: \"edit\", modalTitle: \"Edit Account\", addEditModalOpen: true})\r\n    }\r\n\r\n    const onModalClose = (e, data) => {\r\n        const acc = {label: '', email: ''}\r\n        setState({ ...state, Account: acc, mode: \"add\", modalTitle: \"Add Account\", addEditModalOpen: false });\r\n    }\r\n\r\n    const addAccountForm = (\r\n        <Form className={loading ? \"loading\" : ''} noValidate>\r\n            <Form.Input\r\n                label=\"Label\"\r\n                placeholder=\"Label\"\r\n                name=\"label\"\r\n                type=\"text\"\r\n                value={Account.label}\r\n                onChange={onChangeAccount}\r\n            />\r\n\r\n            <Form.Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={Account.email}\r\n                onChange={onChangeAccount}\r\n            />\r\n        </Form>\r\n    )\r\n\r\n    const addAccountModal = (\r\n        <Grid.Column floated=\"right\">\r\n            <Modal\r\n                closeOnEscape={true}\r\n                closeOnDimmerClick={true}\r\n                open={addEditModalOpen}\r\n                dimmer=\"blurring\"\r\n                size=\"tiny\"\r\n                onOpen={() => setState({ ...state, addEditModalOpen: true })}\r\n                onClose={onModalClose}\r\n                trigger={<Button primary icon='plus' floated=\"right\" />}\r\n            >\r\n                <Modal.Header>{modalTitle}</Modal.Header>\r\n                <Modal.Content>\r\n                    {addAccountForm}\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={onModalClose} basic>\r\n                        Cancel\r\n            </Button>\r\n                    <Button onClick={createOrUpdate} primary>\r\n                        Save\r\n            </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </Grid.Column>\r\n    );\r\n\r\n\r\n    const dataTable = (\r\n        <Grid.Row>\r\n            {\r\n                accounts && accounts.length > 0 ? (\r\n                    <Table selectable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Label</Table.HeaderCell>\r\n                                <Table.HeaderCell>E-Mail</Table.HeaderCell>\r\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {\r\n                                accounts.map((data, i) => (\r\n                                    <Table.Row key={data._id}>\r\n                                        <Table.Cell>{data.label}</Table.Cell>\r\n                                        <Table.Cell> {data.email} </Table.Cell>\r\n                                        <Table.Cell>\r\n                                            <Button circular onClick={() => openEditAccountModal(data)} primary icon='edit'/> \r\n                                            <Button circular onClick={() => openDeleteModal(data._id)} negative icon='trash'/> \r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                ))\r\n                            }\r\n                        </Table.Body>\r\n                    </Table>\r\n                ) : \r\n                (\r\n                    <h3>Create an account</h3>\r\n                )\r\n            }\r\n            \r\n        </Grid.Row>\r\n    )\r\n\r\n    return (\r\n        <Grid columns={1} className=\"main-grid\">\r\n            {addAccountModal}\r\n            {deleteAccountModal}\r\n            {accounts ? dataTable : (<Loading/>)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Accounts\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Profile.js",["253"],"import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport Loading from '../Loading';\r\nimport { Toast } from '../../utils/toast';\r\nimport Compress from 'compress.js';\r\nimport { Button, Image, Grid, Modal, Loader, Segment, Dimmer, Tab } from 'semantic-ui-react';\r\nimport { uploadUserImage, updateUser } from '../../services/users.service';\r\nimport UserDetails from '../UserDetails';\r\nimport ChangePassword from '../ChangePassword';\r\nimport ImageEditor from '../ImageEditor';\r\nimport config from '../../config';\r\nimport DeleteAccount from '../DeleteAccount';\r\nimport trans from '../../utils/translate';\r\n\r\nconst Profile = () => {\r\n    const { user, login } = useContext(AuthContext);\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        modalLoading: false,\r\n        selectedFile: null,\r\n        selectedFileName: null,\r\n        selectedFileType: null,\r\n        previewImage: null,\r\n        imagePreviewModalOpen: false,\r\n        profileImageModalOpen: false,\r\n        tabIndex: 0,\r\n        userDetails: null,\r\n        active: false\r\n    })\r\n\r\n    const imgUrl = config.publicUrl + \"images/users/\";\r\n\r\n    const compress = new Compress()\r\n\r\n    const { active, modalLoading, selectedFile, selectedFileName, selectedFileType, previewImage, imagePreviewModalOpen, profileImageModalOpen, tabIndex, userDetails } = state;\r\n\r\n    useEffect(() => {\r\n        const { username, firstname, lastname, email } = user;\r\n        const details = { username, firstname, lastname, email };\r\n        setState({ ...state, userDetails: details });\r\n    }, [])\r\n\r\n    const panes = [\r\n        { menuItem: trans('details'), render: () => null },\r\n        { menuItem: trans('changePassword'), render: () => null },\r\n        { menuItem: trans('deleteAccount'), render: () => null },\r\n    ]\r\n\r\n    const fileRef = useRef();\r\n\r\n    const onImageClick = () => {\r\n        fileRef.current.click();\r\n    }\r\n\r\n    const fileChnage = (event) => {\r\n        setState({\r\n            ...state,\r\n            selectedFile: event.target.files[0],\r\n            selectedFileName: event.target.files[0].name,\r\n            selectedFileType: event.target.files[0].type,\r\n            previewImage: URL.createObjectURL(event.target.files[0]),\r\n            imagePreviewModalOpen: true\r\n        })\r\n    }\r\n\r\n    const urltoFile = (url, filename, mimeType) => {\r\n        return (fetch(url)\r\n            .then((res) => { return res.arrayBuffer(); })\r\n            .then((buf) => { return new File([buf], filename, { type: mimeType }); })\r\n        );\r\n    }\r\n\r\n    const saveImageAfterChange = (url) => {\r\n        urltoFile(url, selectedFileName, selectedFileType).then(\r\n            res => {\r\n                setState({ ...state, selectedFile: res })\r\n            },\r\n            error => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    const resizeImageFn = async (file) => {\r\n\r\n        const resizedImage = await compress.compress([file], {\r\n            size: 2,\r\n            quality: 1,\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n            resize: true\r\n        })\r\n        const img = resizedImage[0];\r\n        const base64str = img.data\r\n        const imgExt = img.ext\r\n        const resizedFiile = Compress.convertBase64ToFile(base64str, imgExt)\r\n        return resizedFiile;\r\n    }\r\n\r\n    const uploadImage = async () => {\r\n        setState({ ...state, modalLoading: true })\r\n        const compressedFile = await resizeImageFn(selectedFile);\r\n        const data = new FormData()\r\n        data.append('image', compressedFile)\r\n        uploadUserImage(user.token, data).then(\r\n            res => {\r\n                user.imagePath = res.data.filename\r\n                login(user);\r\n                setState({\r\n                    ...state,\r\n                    modalLoading: false,\r\n                    imagePreviewModalOpen: false,\r\n                    previewImage: '',\r\n                    selectedFile: null,\r\n                    selectedFileName: null,\r\n                    selectedFileType: null\r\n                })\r\n                Toast(\"SUCCESS\", \"User image updated successfully\");\r\n            },\r\n            error => {\r\n                Toast(\"ERROR\", \"Error updating user image\");\r\n                setState({ ...state, modalLoading: false })\r\n            }\r\n        )\r\n    }\r\n\r\n    const closeImagePreviewModal = () => {\r\n        setState({\r\n            ...state,\r\n            modalLoading: false,\r\n            imagePreviewModalOpen: false,\r\n            previewImage: '',\r\n            selectedFile: null,\r\n            selectedFileName: null,\r\n            selectedFileType: null\r\n        })\r\n    }\r\n\r\n    const imagePreviewModal = (\r\n        <Modal\r\n            closeOnEscape={true}\r\n            closeOnDimmerClick={true}\r\n            open={imagePreviewModalOpen}\r\n            dimmer=\"blurring\"\r\n            size=\"tiny\"\r\n            onOpen={() => setState({ ...state, imagePreviewModalOpen: true })}\r\n            onClose={closeImagePreviewModal}\r\n        >\r\n            <Modal.Content>\r\n                <Dimmer.Dimmable style={{ textAlign: \"center\" }} as={Segment} dimmed={modalLoading}>\r\n                    <Dimmer inverted active={modalLoading} >\r\n                        <Loader active />\r\n                    </Dimmer>\r\n                    <ImageEditor imgUrl={previewImage} saveAfterChange={saveImageAfterChange} />\r\n                    {/* <Image size=\"medium\" centered src={previewImage} style={{ maxHeight: '50vh', width: 'auto' }} /> */}\r\n                </Dimmer.Dimmable>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={closeImagePreviewModal} floated=\"left\" basic>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={uploadImage} primary>\r\n                    Save\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n\r\n    const updateUserDetails = (stopLoadercallback) => {\r\n        updateUser(user.token, userDetails).then(\r\n            res => {\r\n                let userData = res.data;\r\n                userData.token = user.token;\r\n                login(userData);\r\n                Toast(\"SUCCESS\", \"User details updated successfully\");\r\n                stopLoadercallback();\r\n            },\r\n            error => {\r\n                Toast(\"ERROR\", \"Error updating user details\");\r\n                stopLoadercallback();\r\n            }\r\n        )\r\n    }\r\n\r\n    const onUserDetailsChange = (e) => {\r\n        const data = userDetails\r\n        data[e.target.name] = e.target.value;\r\n        setState({ ...state, userDetails: data })\r\n    }\r\n\r\n    const onTabChange = (event, data) => {\r\n        setState({ ...state, tabIndex: data.activeIndex })\r\n    }\r\n\r\n    const pageContent = () => {\r\n        switch (tabIndex) {\r\n            case 0:\r\n                return (<UserDetails\r\n                    userDetails={userDetails}\r\n                    onUserDetailsChange={onUserDetailsChange}\r\n                    updateUserDetails={updateUserDetails}\r\n                />);\r\n            case 1:\r\n                return (<ChangePassword user={user} />);\r\n            case 2:\r\n                return (<DeleteAccount />);\r\n            default:\r\n                return (<UserDetails\r\n                    userDetails={userDetails}\r\n                    onUserDetailsChange={onUserDetailsChange}\r\n                    updateUserDetails={updateUserDetails}\r\n                />);\r\n        }\r\n    }\r\n\r\n    const openImageProfile = () => {\r\n        setState({ ...state, profileImageModalOpen: true });\r\n    }\r\n\r\n    const closeImageProfile = () => {\r\n        setState({ ...state, profileImageModalOpen: false });\r\n    }\r\n\r\n    const profileImagePreviewModal = (\r\n        <Modal\r\n            closeOnEscape={true}\r\n            closeOnDimmerClick={true}\r\n            open={profileImageModalOpen}\r\n            dimmer=\"blurring\"\r\n            size=\"small\"\r\n            onOpen={() => setState({ ...state, profileImageModalOpen: true })}\r\n            onClose={closeImageProfile}\r\n            id=\"modal-no-padding\"\r\n        >\r\n            <Image id=\"image-no-padding\" size=\"large\" centered src={imgUrl + user.imagePath} />\r\n        </Modal>\r\n    );\r\n\r\n    const content = (\r\n        <div>\r\n            <Button onClick={openImageProfile} inverted basic icon=\"expand arrows alternate\" />\r\n            <Button onClick={onImageClick} inverted basic icon=\"edit\" />\r\n        </div>\r\n    )\r\n\r\n    const handleShow = () => {\r\n        setState({ ...state, active: true })\r\n    }\r\n\r\n    const handleHide = () => {\r\n        setState({ ...state, active: false })\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid columns={2} divided stackable>\r\n            {imagePreviewModal}\r\n            {profileImagePreviewModal}\r\n            <input style={{ display: \"none\" }} type=\"file\" name=\"file\" ref={fileRef} onChange={fileChnage} />\r\n            <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                    {/* <Image style={{ cursor: \"pointer\" }} onClick={onImageClick} size=\"medium\" centered circular src={imgUrl + user.imagePath} /> */}\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Dimmer.Dimmable\r\n                            as={Image}\r\n                            circular\r\n                            dimmed={active}\r\n                            dimmer={{ active, content }}\r\n                            onMouseEnter={handleShow}\r\n                            onMouseLeave={handleHide}\r\n                            size='medium'\r\n                            src={imgUrl + user.imagePath}\r\n                        />\r\n                    </div>\r\n                    <Tab onTabChange={onTabChange} grid={{ tabWidth: 16 }} menu={{ secondary: true, fluid: true, vertical: true, className: \"menu-tab\" }} panes={panes} />\r\n\r\n                </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                    {userDetails ? pageContent() : (<Loading />)}\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\UserDetails.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\ChangePassword.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\ImageEditor.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\menu.service.js",["254"],"import Axios from 'axios';\r\nimport config from '../config';\r\n\r\nconst API_URL = config.apiUrl + \"menus\";\r\n\r\n\r\nexport const createOrUpdate = (token, mode, data) => {\r\n  const URL = mode == \"add\" ? \"/create\" : \"/update\";\r\n  return Axios.post(API_URL + URL, data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const submitConfig = (token, data) => {\r\n  return Axios.post(API_URL + \"/submitConfig\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const update = (token, data) => {\r\n  return Axios.post(API_URL + \"/update\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const updateOrder = (token, data) => {\r\n  return Axios.post(API_URL + \"/updateOrder\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const findAllMenus = (token) => {\r\n  return Axios.post(API_URL + \"/findAll\", null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const findAllByRole = (token, data) => {\r\n  return Axios.post(API_URL + \"/findAllByRole\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const findAllGuest = (token) => {\r\n  return Axios.post(API_URL + \"/findAllGuest\", null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const findAllArtificial = (token) => {\r\n  return Axios.post(API_URL + \"/findAllArtificial\", null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const setMenuForm = (token, data) => {\r\n  return Axios.post(API_URL + \"/setForm\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const getMenuForm = (token, data) => {\r\n  return Axios.post(API_URL + \"/getForm\", data, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}\r\n\r\nexport const deleteOneMenu = (token, id) => {\r\n  return Axios.post(API_URL + \"/remove/\" + id, null, {\r\n    headers: {\r\n      \"x-auth-token\": token\r\n    }\r\n  });\r\n}","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Menus.js",["255","256","257","258","259","260","261","262","263"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\roles.service.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\FormCreator.js",["264","265","266","267","268","269"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, FormBuilder, FormEdit } from 'react-formio';\r\nimport { Button, Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { getMenuForm, setMenuForm } from '../../services/menu.service';\r\nimport { Toast } from '../../utils/toast';\r\nimport Loading from '../Loading';\r\n\r\nconst FormCreator = ({history, location}) => {\r\n    const { user } = useContext(AuthContext)\r\n    const [state, setState] = useState({\r\n        form: null,\r\n        display: false,\r\n        menuId: location.state,\r\n        formRes: null\r\n    })\r\n    const { form, display, menuId, formRes } = state;\r\n\r\n    const updateFormRes = (value) => {\r\n        setState({ ...state, formRes: value })\r\n    }\r\n\r\n    const getForm = () => {\r\n        getMenuForm(user.token, {menuId})\r\n        .then(\r\n            res => {\r\n                let data = [];\r\n                if(res.data.form != '[]'){\r\n                    const value = JSON.parse(res.data.form)\r\n                    data = value.components;\r\n                }\r\n                setState({...state, form: data})\r\n            },\r\n            error => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getForm();\r\n    }, [])\r\n\r\n    const saveForm = () => {\r\n        const formData = JSON.stringify(formRes)\r\n        setMenuForm(user.token, {menuId, formData})\r\n        .then(\r\n            res => {\r\n                Toast(\"SUCCESS\", \"Form saved successfully\");\r\n                history.push('/menus')\r\n            },\r\n            error => {\r\n                console.log(error)\r\n                Toast(\"ERROR\", \"Error while saving the form\");\r\n            }\r\n        )\r\n    }\r\n\r\n    let defaultC = [{ \"label\": \"HTML\", \"tag\": \"h1\", \"className\": \"\", \"attrs\": [{ \"attr\": \"\", \"value\": \"\" }], \"content\": \"default-page-title\", \"refreshOnChange\": false, \"customClass\": \"\", \"hidden\": false, \"modalEdit\": false, \"key\": \"html\", \"tags\": [], \"properties\": {}, \"conditional\": { \"show\": null, \"when\": null, \"eq\": \"\", \"json\": \"\" }, \"customConditional\": \"\", \"logic\": [], \"attributes\": {}, \"overlay\": { \"style\": \"\", \"page\": \"\", \"left\": \"\", \"top\": \"\", \"width\": \"\", \"height\": \"\" }, \"type\": \"htmlelement\", \"input\": false, \"tableView\": false, \"placeholder\": \"\", \"prefix\": \"\", \"suffix\": \"\", \"multiple\": false, \"defaultValue\": null, \"protected\": false, \"unique\": false, \"persistent\": false, \"clearOnHide\": true, \"refreshOn\": \"\", \"redrawOn\": \"\", \"labelPosition\": \"top\", \"description\": \"\", \"errorLabel\": \"\", \"tooltip\": \"\", \"hideLabel\": false, \"tabindex\": \"\", \"disabled\": false, \"autofocus\": false, \"dbIndex\": false, \"customDefaultValue\": \"\", \"calculateValue\": \"\", \"calculateServer\": false, \"widget\": null, \"validateOn\": \"change\", \"validate\": { \"required\": false, \"custom\": \"\", \"customPrivate\": false, \"strictDateValidation\": false, \"multiple\": false, \"unique\": false }, \"allowCalculateOverride\": false, \"encrypted\": false, \"showCharCount\": false, \"showWordCount\": false, \"allowMultipleMasks\": false, \"id\": \"ednmtm\" }];\r\n    return (\r\n        <>\r\n            <Grid>\r\n                <Grid.Row>\r\n                <Button style={{ marginLeft: 'auto' }} floated=\"right\" basic color=\"green\" onClick={saveForm}>Save</Button>\r\n            </Grid.Row>\r\n                <Grid.Row id=\"form-builder\" style={{ border: '0.2px solid lightgrey' }}>\r\n                    {\r\n                        form != null ? (\r\n                            <FormBuilder\r\n                        style={{ width: '100%' }}\r\n                        form={{ display: \"form\", components: form }}\r\n                        onChange={updateFormRes}\r\n                    />\r\n                        ) :\r\n                        (<Loading/>)\r\n                    }\r\n                </Grid.Row>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormCreator\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\FormRender.js",["270","271","272","273","274","275"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, FormBuilder, FormEdit } from 'react-formio';\r\nimport Loading from '../Loading';\r\nimport Error from '../Error';\r\nimport { Button, Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth';\r\nimport { getMenuForm, setMenuForm } from '../../services/menu.service';\r\nimport { formSubmit } from '../../services/api';\r\n\r\nconst FormRender = ({ match, history }) => {\r\n    const { user } = useContext(AuthContext)\r\n    const [state, setState] = useState({\r\n        form: null\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n    const [menu, setMenu] = useState(null)\r\n    const initError = {\r\n        isError: false,\r\n        message: null,\r\n        status: 500\r\n    };\r\n    const [error, setError] = useState(initError)\r\n    const { form } = state;\r\n    const { isError, message } = error;\r\n\r\n    const getForm = () => {\r\n        setLoading(true);\r\n        getMenuForm(user.token, { menuId: match.params.menuId })\r\n            .then(\r\n                res => {\r\n                    setState({ ...state, form: JSON.parse(res.data.form) })\r\n                    setMenu(res.data.menu);\r\n                    setLoading(false);\r\n                    setError(initError)\r\n                },\r\n                error => {\r\n                    let errorMessage = 'Server error';\r\n                    let errorStatus = 500;\r\n                    if (error.response) {\r\n                        errorMessage = error.response.data.error\r\n                        errorStatus = error.response.status\r\n                    }\r\n                    setLoading(false);\r\n                    setError({ isError: true, message: errorMessage, status: errorStatus });\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getForm();\r\n    }, [match.params.menuId])\r\n\r\n    const onFormSubmit = (event) => {\r\n        if (event.data) {\r\n            formSubmit(user.token, menu, event.data)\r\n                .then(\r\n                    res => {\r\n                        history.push(menu.redirectMenu.url);\r\n                    },\r\n                    error => {\r\n                        console.log(error)\r\n                    }\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    const onFormChange = (event) => {\r\n        console.log(event)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Row id=\"form-render\">\r\n                {\r\n                    loading ?\r\n                        (<Loading />) :\r\n                        isError ?\r\n                            (<Error error={error} tryAgain={getForm} />) :\r\n                            (<Form form={form} onCustomEvent={onFormChange} onSubmit={onFormSubmit} />)\r\n                }\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FormRender\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Error.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\config.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\GuestHome.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\NotFound.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\NoData.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\Users.js",["276","277","278","279"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Button, Form, Grid, Modal, Table, Image, Checkbox } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth'\r\nimport { findAll, findOne, removeUser, addOrUpdateUser } from '../../services/users.service'\r\nimport { Toast } from '../../utils/toast';\r\nimport Loading from '../Loading';\r\nimport moment from 'moment';\r\nimport NoData from '../NoData';\r\nimport config from '../../config';\r\n\r\nconst Users = () => {\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const initUser = {\r\n        email: \"\",\r\n        enabled: false,\r\n        firstname: \"\",\r\n        imagePath: \"\",\r\n        lastname: \"\",\r\n        role: \"\",\r\n        username: \"\",\r\n        _id: \"\"\r\n    }\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [usersList, setUsersList] = useState(null);\r\n    const [editUser, setEditUser] = useState(initUser);\r\n    const [deleteUser, setDeleteUser] = useState(null);\r\n    const [editUserModal, setEditUserModal] = useState(false);\r\n    const [deleteUserModal, setDeleteUserModal] = useState(false);\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [mode, setMode] = useState('add');\r\n    const imgUrl = config.publicUrl + \"images/users/\";\r\n\r\n    const getUsers = () => {\r\n        user && findAll(user.token).then(\r\n            (res) => {\r\n                setUsersList(res.data)\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error loading users\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const getOneUser = (id) => {\r\n        user && findOne(user.token, id).then(\r\n            (res) => {\r\n                setEditUser(res.data);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error loading user details\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const removeItem = (id) => {\r\n        let list = usersList.filter(elem => elem._id != id);\r\n        setUsersList(list);\r\n    }\r\n\r\n    const addItem = (item) => {\r\n        let list = usersList;\r\n        list.push(item);\r\n        setUsersList(list);\r\n    }\r\n\r\n    const updateItem = (item) => {\r\n        let list = usersList;\r\n        const index = list.findIndex(elem => elem._id == item._id)\r\n        list[index] = item;\r\n        setUsersList(list);\r\n    }\r\n\r\n    const removeUserAccount = () => {\r\n        user && removeUser(user.token, deleteUser).then(\r\n            (res) => {\r\n                removeItem(deleteUser)\r\n                Toast(\"SUCCESS\", \"User deleted successfully\");\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error deleting user !\");\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const addOrEditUser = () => {\r\n        setLoading(true);\r\n        let userData = null\r\n        if(mode === 'add'){\r\n            userData = {...editUser, password, passwordCheck}\r\n        } else {\r\n            userData = editUser\r\n        }\r\n        user && addOrUpdateUser(user.token, mode, userData).then(\r\n            (res) => {\r\n                setLoading(false);\r\n                if(mode === 'add'){\r\n                    addItem(res.data);\r\n                }else {\r\n                    updateItem(res.data);\r\n                }\r\n                closeAddModal();\r\n                Toast(\"SUCCESS\", \"User details saved successfully\");\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n                Toast(\"ERROR\", \"Error saving user details !\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const formatDate = date => {\r\n        return moment(date).format(\"DD/MM/YYYY HH:mm\")\r\n    }\r\n\r\n    const openAddModal = () => {\r\n        setEditUserModal(true)\r\n    }\r\n\r\n    const closeAddModal = () => {\r\n        setMode('add')\r\n        setEditUserModal(false)\r\n        setEditUser(initUser)\r\n    }\r\n\r\n    const openEditModal = (data) => {\r\n        setMode('edit')\r\n        setEditUser(data)\r\n        getOneUser(data._id)\r\n        openAddModal()\r\n    }\r\n\r\n    const openDeleteModal = (data) => {\r\n        setDeleteUser(data)\r\n        setDeleteUserModal(true);\r\n    }\r\n\r\n    const closeDeleteModal = (data) => {\r\n        setDeleteUser(null)\r\n        setDeleteUserModal(false);\r\n    }\r\n\r\n    const onEditUserChange = (e) => {\r\n        setEditUser({ ...editUser, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeEnabled = (e, data) => {\r\n        setEditUser({ ...editUser, enabled: data.checked })\r\n    }\r\n\r\n    const userDetailsForm = (\r\n        <Form className={loading ? \"loading\" : ''} noValidate>\r\n            <Checkbox label='Enabled' checked={editUser.enabled} onChange={onChangeEnabled} />\r\n            {editUser.imagePath && <Image className=\"edit-user-img\" floated=\"right\" circular size='tiny' src={imgUrl + editUser.imagePath} />}\r\n            <Form.Input\r\n                label=\"Username\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={editUser.username}\r\n                onChange={onEditUserChange}\r\n            />\r\n\r\n            <Form.Input\r\n                label=\"Firstname\"\r\n                placeholder=\"Firstname\"\r\n                name=\"firstname\"\r\n                type=\"text\"\r\n                value={editUser.firstname}\r\n                onChange={onEditUserChange}\r\n            />\r\n            <Form.Input\r\n                label=\"Lastname\"\r\n                placeholder=\"Lastname\"\r\n                name=\"lastname\"\r\n                type=\"text\"\r\n                value={editUser.lastname}\r\n                onChange={onEditUserChange}\r\n            />\r\n\r\n            <Form.Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={editUser.email}\r\n                onChange={onEditUserChange}\r\n            />\r\n            {\r\n                mode === 'add' ?\r\n                (\r\n                    <>\r\n                    <Form.Input\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            label=\"Confirm Password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"passwordCheck\"\r\n                            type=\"password\"\r\n                            value={passwordCheck}\r\n                            onChange={(e) => setPasswordCheck(e.target.value)}\r\n                        />\r\n                    </>\r\n                ): null\r\n            }\r\n        </Form>\r\n    )\r\n\r\n    const addUserModal = (\r\n        <Grid.Column floated=\"right\">\r\n            <Modal\r\n                closeOnEscape={true}\r\n                closeOnDimmerClick={true}\r\n                open={editUserModal}\r\n                dimmer=\"blurring\"\r\n                size=\"tiny\"\r\n                onOpen={openAddModal}\r\n                onClose={closeAddModal}\r\n                trigger={<Button primary icon='plus' floated=\"right\" />}\r\n            >\r\n                <Modal.Header>\r\n                    <h4>{mode === 'add' ? 'Add User' : 'Edit User'}</h4>\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    {userDetailsForm}\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={closeAddModal} basic>\r\n                        Cancel\r\n            </Button>\r\n                    <Button onClick={addOrEditUser} primary>\r\n                        Save\r\n            </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </Grid.Column>\r\n    );\r\n\r\n    const deleteModal = (\r\n        <Modal\r\n            closeOnEscape={true}\r\n            closeOnDimmerClick={true}\r\n            open={deleteUserModal}\r\n            dimmer=\"blurring\"\r\n            size=\"tiny\"\r\n            onOpen={() => setDeleteUserModal(true)}\r\n            onClose={closeDeleteModal}\r\n        >\r\n            <Modal.Header>Confirmation</Modal.Header>\r\n            <Modal.Content>\r\n                <h3>Are you sure you want to delete the User ?</h3>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={closeDeleteModal} basic>\r\n                    Cancel\r\n        </Button>\r\n                <Button onClick={removeUserAccount} negative>\r\n                    Delete\r\n        </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n\r\n    const dataTable = (\r\n        <Grid.Row>\r\n            {\r\n                usersList && usersList.length > 0 ? (\r\n                    <Table selectable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Username</Table.HeaderCell>\r\n                                <Table.HeaderCell>Role</Table.HeaderCell>\r\n                                <Table.HeaderCell>Created at</Table.HeaderCell>\r\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {\r\n                                usersList.map((data, i) => (\r\n                                    <Table.Row key={data._id}>\r\n                                        <Table.Cell>{data.username}</Table.Cell>\r\n                                        <Table.Cell>{data.role.label}</Table.Cell>\r\n                                        <Table.Cell>{formatDate(data.createdAt)}</Table.Cell>\r\n                                        {\r\n                                            data.role.label != 'ADMIN' ?\r\n                                                (\r\n                                                    <Table.Cell>\r\n                                                        <Button onClick={() => openEditModal(data)} circular primary icon='edit' />\r\n                                                        <Button onClick={() => openDeleteModal(data._id)} circular negative icon='trash' />\r\n                                                    </Table.Cell>\r\n                                                )\r\n                                                : null\r\n                                        }\r\n\r\n                                    </Table.Row>\r\n                                ))\r\n                            }\r\n                        </Table.Body>\r\n                    </Table>\r\n                ) :\r\n                    (\r\n                        <NoData />\r\n                    )\r\n            }\r\n\r\n        </Grid.Row>\r\n    )\r\n\r\n    return (\r\n        <Grid columns={1} className=\"main-grid\">\r\n            {addUserModal}\r\n            {deleteModal}\r\n            {usersList ? dataTable : (<Loading />)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\users.service.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\RegisterRequests.js",["280","281","282"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Button, Form, Grid, Table } from 'semantic-ui-react';\r\nimport { AuthContext } from '../../context/auth'\r\nimport { findAll, validate, remove } from '../../services/register-request.service'\r\nimport { Toast } from '../../utils/toast';\r\nimport Loading from '../Loading';\r\nimport moment from 'moment';\r\nimport NoData from '../NoData';\r\nimport Emitter from '../../services/events';\r\nimport EventsTypes from '../../utils/EventsTypes';\r\n\r\nconst RegisterRequests = () => {\r\n\r\n    const { user } = useContext(AuthContext)\r\n    const [requestList, setRequestsList] = useState(null);\r\n\r\n    const getRequests = () => {\r\n        user && findAll(user.token).then(\r\n            (res) => {\r\n                setRequestsList(res.data)\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error loading users registrations requests\");\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRequests();\r\n    }, [])\r\n\r\n    const formatDate = date => {\r\n        return moment(date).format(\"DD/MM/YYYY HH:mm\")\r\n    }\r\n\r\n    const removeItem = (id) => {\r\n        let list = requestList.filter(elem => elem._id != id);\r\n        setRequestsList(list);\r\n    }\r\n\r\n    const validateUser = (id) => {\r\n        user && validate(user.token, id).then(\r\n            (res) => {\r\n                Emitter.emit(EventsTypes.REQUESTS_NUMBER, res.data);\r\n                removeItem(id);\r\n                Toast(\"SUCCESS\", \"User request validated successfully\");\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error validating user request\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const removeUser = (id) => {\r\n        user && remove(user.token, id).then(\r\n            (res) => {\r\n                Emitter.emit(EventsTypes.REQUESTS_NUMBER, res.data);\r\n                removeItem(id);\r\n                Toast(\"SUCCESS\", \"User request rejected successfully\");\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                Toast(\"ERROR\", \"Error removing user request\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const dataTable = (\r\n        <Grid.Row>\r\n            {\r\n                requestList && requestList.length > 0 ? (\r\n                    <Table selectable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Username</Table.HeaderCell>\r\n                                <Table.HeaderCell>Created at</Table.HeaderCell>\r\n                                <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {\r\n                                requestList.map(data => (\r\n                                    <Table.Row key={data._id}>\r\n                                        <Table.Cell>{data.user.username}</Table.Cell>\r\n                                        <Table.Cell>{formatDate(data.createdAt)}</Table.Cell>\r\n                                        <Table.Cell>\r\n                                            <Button onClick={() => validateUser(data._id)} circular primary icon='checkmark' />\r\n                                            <Button onClick={() => removeUser(data._id)} circular negative icon='trash' />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                ))\r\n                            }\r\n                        </Table.Body>\r\n                    </Table>\r\n                ) :\r\n                    (\r\n                        <NoData />\r\n                    )\r\n            }\r\n\r\n        </Grid.Row>\r\n    )\r\n\r\n    return (\r\n        <Grid columns={1} className=\"main-grid\">\r\n            {/* {addUserModal} */}\r\n            {requestList ? dataTable : (<Loading />)}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RegisterRequests\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\register-request.service.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\events.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\EventsTypes.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\DeleteAccount.js",["283","284"],"import React, { useContext, useState } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/auth';\r\nimport { remove } from '../services/users.service'\r\nimport { Toast } from '../utils/toast';\r\n\r\nconst DeleteAccount = () => {\r\n\r\n    const { user, logout, login } = useContext(AuthContext);\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        password: ''\r\n    })\r\n\r\n    const { loading, password } = state;\r\n\r\n    const onChange = (e) => {\r\n        setState({ ...state, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const initInputs = () => {\r\n        setState({\r\n            ...state,\r\n            loading: false,\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    const onDeleteAccount = (e) => {\r\n        e.preventDefault();\r\n        setState({...state, loading: true})\r\n        remove(user.token, {password}, user._id)\r\n        .then(\r\n            res => {\r\n                if(res.data){\r\n                    logout();\r\n                }\r\n            },\r\n            error => {\r\n                setState({...state, loading: false})\r\n                Toast(\"ERROR\", \"Error deleting the account\");\r\n            }\r\n        )\r\n    }\r\n\r\n    const deleteAccountForm = (\r\n        <Form onSubmit={onDeleteAccount} className={loading ? \"loading\" : ''} noValidate>\r\n            <Form.Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={onChange}\r\n            />\r\n            <Button type=\"submit\" floated=\"right\" negative>\r\n                Delete\r\n            </Button>\r\n        </Form>\r\n    )\r\n\r\n    return deleteAccountForm\r\n}\r\n\r\nexport default DeleteAccount\r\n","C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\i18n.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\translate.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\Messenger.js",["285","286","287","288","289","290","291","292","293","294","295","296","297"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\conversations\\Conversation.js",["298","299","300"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\message\\Message.js",["301"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\pages\\chat\\chatOnline\\ChatOnline.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\conversation.service.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\displayName.js",["302","303"],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\services\\message.service.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\components\\Tooltip.js",[],"C:\\Users\\acer1\\Desktop\\react\\mail\\client\\src\\utils\\socketEvents.js",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":45,"column":23,"nodeType":"310","messageId":"311","endLine":45,"endColumn":28},{"ruleId":"308","severity":1,"message":"312","line":45,"column":43,"nodeType":"310","messageId":"311","endLine":45,"endColumn":49},{"ruleId":"308","severity":1,"message":"313","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":14},{"ruleId":"314","severity":1,"message":"315","line":45,"column":6,"nodeType":"316","endLine":45,"endColumn":8,"suggestions":"317"},{"ruleId":"314","severity":1,"message":"318","line":32,"column":6,"nodeType":"316","endLine":32,"endColumn":8,"suggestions":"319"},{"ruleId":"308","severity":1,"message":"320","line":9,"column":11,"nodeType":"310","messageId":"311","endLine":9,"endColumn":18},{"ruleId":"308","severity":1,"message":"321","line":18,"column":20,"nodeType":"310","messageId":"311","endLine":18,"endColumn":29},{"ruleId":"308","severity":1,"message":"321","line":19,"column":20,"nodeType":"310","messageId":"311","endLine":19,"endColumn":29},{"ruleId":"308","severity":1,"message":"322","line":1,"column":16,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"323","severity":1,"message":"324","line":8,"column":20,"nodeType":"325","messageId":"326","endLine":8,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":19},{"ruleId":null,"fatal":true,"severity":2,"message":"328","line":6,"column":7},{"ruleId":"323","severity":1,"message":"329","line":17,"column":42,"nodeType":"325","messageId":"326","endLine":17,"endColumn":44},{"ruleId":"323","severity":1,"message":"329","line":17,"column":82,"nodeType":"325","messageId":"326","endLine":17,"endColumn":84},{"ruleId":"314","severity":1,"message":"330","line":32,"column":6,"nodeType":"316","endLine":32,"endColumn":8,"suggestions":"331"},{"ruleId":"323","severity":1,"message":"324","line":60,"column":38,"nodeType":"325","messageId":"326","endLine":60,"endColumn":40},{"ruleId":"314","severity":1,"message":"332","line":32,"column":8,"nodeType":"316","endLine":32,"endColumn":10,"suggestions":"333"},{"ruleId":"308","severity":1,"message":"334","line":4,"column":10,"nodeType":"310","messageId":"311","endLine":4,"endColumn":15},{"ruleId":"308","severity":1,"message":"335","line":7,"column":13,"nodeType":"310","messageId":"311","endLine":7,"endColumn":17},{"ruleId":"308","severity":1,"message":"336","line":8,"column":19,"nodeType":"310","messageId":"311","endLine":8,"endColumn":27},{"ruleId":"314","severity":1,"message":"330","line":36,"column":8,"nodeType":"316","endLine":36,"endColumn":10,"suggestions":"337"},{"ruleId":"314","severity":1,"message":"330","line":41,"column":8,"nodeType":"316","endLine":41,"endColumn":10,"suggestions":"338"},{"ruleId":"323","severity":1,"message":"324","line":8,"column":20,"nodeType":"325","messageId":"326","endLine":8,"endColumn":22},{"ruleId":"308","severity":1,"message":"339","line":3,"column":18,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"340","line":5,"column":10,"nodeType":"310","messageId":"311","endLine":5,"endColumn":27},{"ruleId":"308","severity":1,"message":"341","line":30,"column":12,"nodeType":"310","messageId":"311","endLine":30,"endColumn":23},{"ruleId":"308","severity":1,"message":"342","line":30,"column":25,"nodeType":"310","messageId":"311","endLine":30,"endColumn":39},{"ruleId":"314","severity":1,"message":"343","line":117,"column":8,"nodeType":"316","endLine":117,"endColumn":10,"suggestions":"344"},{"ruleId":"323","severity":1,"message":"324","line":124,"column":26,"nodeType":"325","messageId":"326","endLine":124,"endColumn":28},{"ruleId":"323","severity":1,"message":"324","line":127,"column":68,"nodeType":"325","messageId":"326","endLine":127,"endColumn":70},{"ruleId":"323","severity":1,"message":"329","line":157,"column":63,"nodeType":"325","messageId":"326","endLine":157,"endColumn":65},{"ruleId":"323","severity":1,"message":"324","line":244,"column":68,"nodeType":"325","messageId":"326","endLine":244,"endColumn":70},{"ruleId":"308","severity":1,"message":"345","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":14},{"ruleId":"308","severity":1,"message":"346","line":2,"column":29,"nodeType":"310","messageId":"311","endLine":2,"endColumn":37},{"ruleId":"308","severity":1,"message":"347","line":17,"column":19,"nodeType":"310","messageId":"311","endLine":17,"endColumn":26},{"ruleId":"323","severity":1,"message":"329","line":28,"column":34,"nodeType":"325","messageId":"326","endLine":28,"endColumn":36},{"ruleId":"314","severity":1,"message":"348","line":42,"column":8,"nodeType":"316","endLine":42,"endColumn":10,"suggestions":"349"},{"ruleId":"308","severity":1,"message":"350","line":59,"column":9,"nodeType":"310","messageId":"311","endLine":59,"endColumn":17},{"ruleId":"308","severity":1,"message":"351","line":2,"column":16,"nodeType":"310","messageId":"311","endLine":2,"endColumn":27},{"ruleId":"308","severity":1,"message":"346","line":2,"column":29,"nodeType":"310","messageId":"311","endLine":2,"endColumn":37},{"ruleId":"308","severity":1,"message":"352","line":5,"column":10,"nodeType":"310","messageId":"311","endLine":5,"endColumn":16},{"ruleId":"308","severity":1,"message":"353","line":7,"column":23,"nodeType":"310","messageId":"311","endLine":7,"endColumn":34},{"ruleId":"308","severity":1,"message":"354","line":24,"column":22,"nodeType":"310","messageId":"311","endLine":24,"endColumn":29},{"ruleId":"314","severity":1,"message":"348","line":51,"column":8,"nodeType":"316","endLine":51,"endColumn":29,"suggestions":"355"},{"ruleId":"323","severity":1,"message":"329","line":61,"column":54,"nodeType":"325","messageId":"326","endLine":61,"endColumn":56},{"ruleId":"323","severity":1,"message":"324","line":73,"column":55,"nodeType":"325","messageId":"326","endLine":73,"endColumn":57},{"ruleId":"314","severity":1,"message":"356","line":93,"column":8,"nodeType":"316","endLine":93,"endColumn":10,"suggestions":"357"},{"ruleId":"323","severity":1,"message":"329","line":303,"column":61,"nodeType":"325","messageId":"326","endLine":303,"endColumn":63},{"ruleId":"308","severity":1,"message":"345","line":2,"column":18,"nodeType":"310","messageId":"311","endLine":2,"endColumn":22},{"ruleId":"314","severity":1,"message":"358","line":31,"column":8,"nodeType":"316","endLine":31,"endColumn":10,"suggestions":"359"},{"ruleId":"323","severity":1,"message":"329","line":38,"column":56,"nodeType":"325","messageId":"326","endLine":38,"endColumn":58},{"ruleId":"308","severity":1,"message":"360","line":9,"column":27,"nodeType":"310","messageId":"311","endLine":9,"endColumn":32},{"ruleId":"308","severity":1,"message":"361","line":21,"column":11,"nodeType":"310","messageId":"311","endLine":21,"endColumn":21},{"ruleId":"308","severity":1,"message":"362","line":2,"column":18,"nodeType":"310","messageId":"311","endLine":2,"endColumn":27},{"ruleId":"308","severity":1,"message":"363","line":2,"column":29,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"364","line":8,"column":8,"nodeType":"310","messageId":"311","endLine":8,"endColumn":18},{"ruleId":"314","severity":1,"message":"365","line":111,"column":20,"nodeType":"310","endLine":111,"endColumn":27},{"ruleId":"314","severity":1,"message":"366","line":113,"column":8,"nodeType":"316","endLine":113,"endColumn":10,"suggestions":"367"},{"ruleId":"323","severity":1,"message":"329","line":116,"column":73,"nodeType":"325","messageId":"326","endLine":116,"endColumn":75},{"ruleId":"323","severity":1,"message":"324","line":117,"column":53,"nodeType":"325","messageId":"326","endLine":117,"endColumn":55},{"ruleId":"314","severity":1,"message":"368","line":119,"column":8,"nodeType":"316","endLine":119,"endColumn":37,"suggestions":"369"},{"ruleId":"323","severity":1,"message":"329","line":132,"column":63,"nodeType":"325","messageId":"326","endLine":132,"endColumn":65},{"ruleId":"314","severity":1,"message":"365","line":139,"column":20,"nodeType":"310","endLine":139,"endColumn":27},{"ruleId":"314","severity":1,"message":"370","line":146,"column":8,"nodeType":"316","endLine":146,"endColumn":21,"suggestions":"371"},{"ruleId":"323","severity":1,"message":"329","line":159,"column":74,"nodeType":"325","messageId":"326","endLine":159,"endColumn":76},{"ruleId":"323","severity":1,"message":"324","line":207,"column":81,"nodeType":"325","messageId":"326","endLine":207,"endColumn":83},{"ruleId":"323","severity":1,"message":"329","line":13,"column":60,"nodeType":"325","messageId":"326","endLine":13,"endColumn":62},{"ruleId":"314","severity":1,"message":"372","line":14,"column":8,"nodeType":"316","endLine":14,"endColumn":10,"suggestions":"373"},{"ruleId":"323","severity":1,"message":"324","line":17,"column":68,"nodeType":"325","messageId":"326","endLine":17,"endColumn":70},{"ruleId":"323","severity":1,"message":"324","line":16,"column":31,"nodeType":"325","messageId":"326","endLine":16,"endColumn":33},{"ruleId":"323","severity":1,"message":"329","line":2,"column":42,"nodeType":"325","messageId":"326","endLine":2,"endColumn":44},{"ruleId":"323","severity":1,"message":"329","line":2,"column":82,"nodeType":"325","messageId":"326","endLine":2,"endColumn":84},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"no-unused-vars","'width' is assigned a value but never used.","Identifier","unusedVar","'height' is assigned a value but never used.","'Grid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserAccounts'. Either include it or remove the dependency array.","ArrayExpression",["376"],"React Hook useEffect has missing dependencies: 'logout' and 'refreshTokenCallback'. Either include them or remove the dependency array.",["377"],"'context' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","Parsing error: Identifier 'Sidebar' has already been declared\n\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mimport\u001b[39m { \u001b[33mAuthContext\u001b[39m } from \u001b[32m'../context/auth'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mSidebar\u001b[39m \u001b[33m=\u001b[39m ({children}) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m    \u001b[36mconst\u001b[39m {user} \u001b[33m=\u001b[39m useContext(\u001b[33mAuthContext\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m    \u001b[36mconst\u001b[39m [visible\u001b[33m,\u001b[39m setVisible] \u001b[33m=\u001b[39m useState(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 9 | \u001b[39m    \u001b[36mreturn\u001b[39m (\u001b[0m","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'state' and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["378"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["379"],"'Toast' is defined but never used.","'user' is assigned a value but never used.","'setState' is assigned a value but never used.",["380"],["381"],"'Table' is defined but never used.","'findAllArtificial' is defined but never used.","'sortedMenus' is assigned a value but never used.","'setSortedMenus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMenus'. Either include it or remove the dependency array.",["382"],"'Form' is defined but never used.","'FormEdit' is defined but never used.","'display' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getForm'. Either include it or remove the dependency array.",["383"],"'defaultC' is assigned a value but never used.","'FormBuilder' is defined but never used.","'Button' is defined but never used.","'setMenuForm' is defined but never used.","'message' is assigned a value but never used.",["384"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["385"],"React Hook useEffect has a missing dependency: 'getRequests'. Either include it or remove the dependency array.",["386"],"'login' is assigned a value but never used.","'initInputs' is assigned a value but never used.","'FormInput' is defined but never used.","'Icon' is defined but never used.","'ChatOnline' is defined but never used.","The ref value 'socket.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'socket.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'audio', 'findConvs', and 'user._id'. Either include them or remove the dependency array.",["387"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["388"],"React Hook useEffect has missing dependencies: 'findCurrentChatMessages' and 'initPAgination'. Either include them or remove the dependency array.",["389"],"React Hook useEffect has missing dependencies: 'conversation.members' and 'currentUserId'. Either include them or remove the dependency array. If 'setUser' needs the current value of 'conversation.members', you can also switch to useReducer instead of useState and read 'conversation.members' in the reducer.",["390"],"no-global-assign","no-unsafe-negation",{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"395","fix":"399"},{"desc":"395","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},"Update the dependencies array to be: [getUserAccounts]",{"range":"419","text":"420"},"Update the dependencies array to be: [logout, refreshTokenCallback]",{"range":"421","text":"422"},"Update the dependencies array to be: [state, user]",{"range":"423","text":"424"},"Update the dependencies array to be: [user]",{"range":"425","text":"426"},{"range":"427","text":"424"},{"range":"428","text":"424"},"Update the dependencies array to be: [getMenus]",{"range":"429","text":"430"},"Update the dependencies array to be: [getForm]",{"range":"431","text":"432"},"Update the dependencies array to be: [getForm, match.params.menuId]",{"range":"433","text":"434"},"Update the dependencies array to be: [getUsers]",{"range":"435","text":"436"},"Update the dependencies array to be: [getRequests]",{"range":"437","text":"438"},"Update the dependencies array to be: [audio, findConvs, user._id]",{"range":"439","text":"440"},"Update the dependencies array to be: [arrivalMessage, currentChat, user._id]",{"range":"441","text":"442"},"Update the dependencies array to be: [currentChat, findCurrentChatMessages, initPAgination]",{"range":"443","text":"444"},"Update the dependencies array to be: [conversation.members, currentUserId]",{"range":"445","text":"446"},[1370,1372],"[getUserAccounts]",[1191,1193],"[logout, refreshTokenCallback]",[997,999],"[state, user]",[954,956],"[user]",[1208,1210],[1630,1632],[3635,3637],"[getMenus]",[1304,1306],"[getForm]",[1840,1861],"[getForm, match.params.menuId]",[2859,2861],"[getUsers]",[1037,1039],"[getRequests]",[3955,3957],"[audio, findConvs, user._id]",[4272,4301],"[arrivalMessage, currentChat, user._id]",[5327,5340],"[currentChat, findCurrentChatMessages, initPAgination]",[506,508],"[conversation.members, currentUserId]"]